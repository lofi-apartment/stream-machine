name: download-playlist

on:
  workflow_call:
    inputs:
      PLAYLIST:
        type: string
        required: true

permissions:
  contents: read

defaults:
  run:
    shell: bash

jobs:

  download:
    runs-on: ubuntu-latest
    steps:

      -
        uses: actions/checkout@v4

      -
        name: Validate playlist exists
        run: |
          if [[ "$(yq '.playlists.["${{ inputs.PLAYLIST }}"].name')" == "null" ]]; then
            echo "::error::Unrecognized playlist: '${{ inputs.PLAYLIST }}'"
            exit 1
          fi

      -
        name: Parse playlist data
        id: playlist-data
        run: |
          # Parse playlist data
          echo name="$(yq '.playlists.["${{ inputs.PLAYLIST }}"].name' playlists.yml)" | tee -a "$GITHUB_OUTPUT"
          echo "playlist-id=$(yq '.playlists.["${{ inputs.PLAYLIST }}"].playlist_id' playlists.yml)" | tee -a "$GITHUB_OUTPUT"

      -
        name: Install ffmpeg
        uses: federicocarboni/setup-ffmpeg@v3.1

      -
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          cache: 'pip' # caching pip dependencies

      -
        name: Install python modules
        run: pip install -r requirements.txt

      -
        name: Create .audiocache directory
        run: mkdir .audiocache

      -
        name: Restore .audiocache from cache
        uses: actions/cache/restore@v3
        with:
          path: .audiocache
          key: ${{ inputs.PLAYLIST }}

      - name: Sync playlist
        working-directory: .audiocache
        env:
          PLAYLIST_ID: ${{ steps.playlist-data.outputs.playlist-id }}
        run: |
          # spotdl playlist sync: https://spotdl.readthedocs.io/en/latest/usage/#syncing
          spotdl \
            --output "{list-position}.{output-ext}" \
            --format wav \
            --save-file save.spotdl \
            sync "https://open.spotify.com/playlist/${PLAYLIST_ID}"

      -
        name: Cache .audiocache
        uses: actions/cache/save@v3
        with:
          path: .audiocache
          key: ${{ inputs.PLAYLIST }}

