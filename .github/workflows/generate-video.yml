name: generate-video

run-name: generate-video (${{ inputs.PLAYLIST }})

on:
  workflow_call:
    inputs:
      PLAYLIST:
        type: string
        required: true
    secrets:
      GH_PAT:
        required: true
  workflow_dispatch:
    inputs:
      PLAYLIST:
        type: string
        required: true

permissions:
  contents: read

defaults:
  run:
    shell: bash

jobs:

  generate-video:
    runs-on: ubuntu-latest
    steps:

      -
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }}

      -
        name: Validate playlist exists
        run: |
          if [[ "$(yq '.playlists.["${{ inputs.PLAYLIST }}"].name' playlists.yml)" == "null" ]]; then
            echo "::error::Unrecognized playlist: '${{ inputs.PLAYLIST }}'"
            exit 1
          fi

      -
        name: Parse playlist data
        id: playlist-data
        run: |
          # Parse playlist data
          echo "name=$(yq '.playlists.["${{ inputs.PLAYLIST }}"].name' playlists.yml)" | tee -a "$GITHUB_OUTPUT"
          echo "playlist_id=$(yq '.playlists.["${{ inputs.PLAYLIST }}"].playlist_id' playlists.yml)" | tee -a "$GITHUB_OUTPUT"
          echo "bg-file=$(yq '.playlists.["${{ inputs.PLAYLIST }}"].bg_file' playlists.yml)" | tee -a "$GITHUB_OUTPUT"

      -
        name: Install ffmpeg
        run: |
          sudo apt update
          sudo apt install -y ffmpeg

      -
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          cache: 'pip' # caching pip dependencies

      -
        name: Install python modules
        run: pip install -r requirements.txt

      -
        name: Restore audio cache
        uses: actions/cache@v4
        with:
          path: playlists/${{ inputs.PLAYLIST }}/audio
          key: ${{ inputs.PLAYLIST }}-${{ github.run_id }}
          restore-keys: ${{ inputs.PLAYLIST }}

      -
        name: Generate video
        env:
          PLAYLIST_URL: https://open.spotify.com/playlist/${{ steps.playlist-data.outputs.playlist_id }}
          PLAYLIST_PATH: playlists/${{ inputs.PLAYLIST }}
          REGULAR_FONT: font/Roboto/Roboto-Regular.ttf
          BOLD_FONT: font/Roboto/Roboto-Regular.ttf
        run: |
          # Generate video
          ./video-generator/generate.sh
      -
        name: Show results
        run: |
          find "playlists/${{ inputs.PLAYLIST }}" -path "**/*.wav"
